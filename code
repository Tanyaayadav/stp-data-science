import matplotlib.pyplot as plt
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.datasets import load_iris
import matplotlib.image as mpimg

iris = load_iris()

df = pd.DataFrame(iris.data, columns=iris.feature_names)
df['Flower Group'] = iris.target

print("Initial DataFrame:\n", df.head())

Sentosa = df[df['Flower Group'] == 0]
Versicolor = df[df['Flower Group'] == 1]
Virginica = df[df['Flower Group'] == 2]

model = KMeans(n_clusters=3)
df['cluster'] = model.fit_predict(df[['petal length (cm)', 'petal width (cm)']])

sentosa_img = mpimg.imread('C:/Users/yadav/Desktop/flower/Sentosa.jpg')
versicolor_img = mpimg.imread('C:/Users/yadav/Desktop/flower/vergicolor.jpg')
virginica_img = mpimg.imread('C:/Users/yadav/Desktop/flower/virginica.jpg')

fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))

ax1.scatter(Sentosa['petal length (cm)'], Sentosa['petal width (cm)'], color='r', marker='o', label='Sentosa')
ax1.scatter(Versicolor['petal length (cm)'], Versicolor['petal width (cm)'], color='g', marker='x', label='Versicolor')
ax1.scatter(Virginica['petal length (cm)'], Virginica['petal width (cm)'], color='b', marker='^', label='Virginica')
ax1.set_xlabel('Petal Length (cm)')
ax1.set_ylabel('Petal Width (cm)')
ax1.legend()
ax1.set_title('Original Petal Length vs. Petal Width')
ax1.grid(True)

ax2.scatter(df['petal length (cm)'], df['petal width (cm)'], c=df['cluster'], cmap='viridis', marker='o', alpha=0.6)
ax2.scatter(model.cluster_centers_[:, 0], model.cluster_centers_[:, 1], s=300, c='red', marker='X', label='Centroids')
ax2.set_xlabel('Petal Length (cm)')
ax2.set_ylabel('Petal Width (cm)')
ax2.legend(loc='upper right', title='Clusters')
ax2.set_title('Clustered Petal Length vs. Petal Width')
ax2.grid(True)

plt.tight_layout()
plt.show()

fig, axes = plt.subplots(1, 3, figsize=(15, 5))

axes[0].imshow(sentosa_img)
axes[0].axis('off')
axes[0].set_title('Sentosa')

axes[1].imshow(versicolor_img)
axes[1].axis('off')
axes[1].set_title('Versicolor')

axes[2].imshow(virginica_img)
axes[2].axis('off')
axes[2].set_title('Virginica')

plt.suptitle('Flower Types in the Iris Dataset', fontsize=16)
plt.show()

sse = []
range_for_k = range(1, 8)

for k in range_for_k:
    model = KMeans(n_clusters=k)
    model.fit(df[['petal length (cm)', 'petal width (cm)']])
    sse_for_current_k = model.inertia_
    sse.append(sse_for_current_k)


plt.figure(figsize=(10, 6))
plt.plot(range_for_k, sse, marker='o', linestyle='-', color='b')
plt.xlabel('Number of Clusters (K)', fontsize=12)
plt.ylabel('Sum of Squared Errors (SSE)', fontsize=12)
plt.title('Elbow Method for Optimal K', fontsize=14)
plt.grid(True, linestyle='--', alpha=0.7)

optimal_k = 3
plt.axvline(x=optimal_k, linestyle='--', color='r', label=f'Optimal K={optimal_k}')
plt.fill_betweenx(sse, optimal_k, color='lightgray', alpha=0.5)

plt.legend()
plt.show()
